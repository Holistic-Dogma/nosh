#!/usr/bin/env zsh
#- nosh crypto:password - sets the password for encryption and decryption.
#  &usage: nosh crypto:password set [password]
#  &usage: nosh crypto:password auto - sets the password using the name of the monorepo.
#  &usage: nosh crypto:password get
#  &usage: nosh crypto:password unset
#  &usage: nosh crypto:password --help

AcceptedCommands=("set" "get" "unset" "--help", "-h", "help")


if [[ -z "$1" || "$1" == "--help" || "$1" == "-h" || "$1" == "help" ]]; then
  nosh help crypto:password
  exit 0
fi

if [[ $AcceptedCommands[(Ie)$1] -eq 0 ]]; then
  scrawl 'error' "Invalid command: $1"
  nosh help crypto:password
  exit 1
fi

source $(whither zncyk)


if [[ "$1" == "set" ]]; then
  if [[ -z "$2" ]]; then
    scrawl 'error' "You must provide a password to set."
    exit 1
  else
    Nosh__Encryption_Password="$(__nosh_encrypt_string "$2")"
    scrawl alert nosh.crypto.password.set "Encryption password set."
    export Nosh__Encryption_Password
    nosh init:profile crypto "export Nosh__Encryption_Password=\"$Nosh__Encryption_Password\""
  fi
  exit 0
fi

if [[ "$1" == "get" ]]; then
  if [[ -z "$Nosh__Encryption_Password" ]]; then
    scrawl error nosh.password.missing "No encryption password set! use 'nosh crypto:password set [password]' to set one."
    exit 1
  else
    scrawl alert nosh.crypto.password.get "Encryption password retrieved."
    echo "$(__nosh_decrypt_string "$Nosh__Encryption_Password")"
  fi
  exit 0
fi

if [[ "$1" == "unset" ]]; then
  unset Nosh__Encryption_Password
  scrawl alert nosh.crypto.password.unset "Encryption password unset for this session. Do you want to delete the file as well?"
  gets "Delete the password file? [y/N] " delete_file
  if [[ "$delete_file" == "y" ]]; then
    rm -f $Nosh_UsrDir/profiles/crypto.profile
    scrawl alert nosh.crypto.password.unset "Password file deleted."
  fi
  exit 0
fi

if [[ "$1" == "auto" ]]; then
  if [[ -z "$Nosh__Encryption_Password" ]]; then
    Nosh__Monorepo_Name=$(jq -r '.name' $Nosh_AppDir/package.json)
    Nosh__Encryption_Password="$(__nosh_encrypt_string "$Nosh__Monorepo_Name")"
    scrawl alert nosh.crypto.password.auto "Encryption password set to monorepo name."
    export Nosh__Encryption_Password
    nosh init:profile crypto "export Nosh__Encryption_Password=\"$Nosh__Encryption_Password\""
  else
    scrawl error nosh.crypto.password.auto "Encryption password already set. Unset it first."
    exit 1
  fi
  exit 0
fi